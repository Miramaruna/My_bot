# sqlite3

import sqlite3, random

# aiogram

from aiogram import F, Router
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from app.keyboard import *
from pnj import *

router = Router()
connection = sqlite3.connect("Mana.db")
cursor = connection.cursor()

cursor.execute("""
    CREATE TABLE IF NOT EXISTS users(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fist_name VARCHAR(30),
    last_name VARCHAR(30),
    age INTEGER DEFAULT NULL,
    is_primium BOOLEAN,
    wins INTEGER
    )
""")
connection.commit()

cursor.execute("""
    CREATE TABLE IF NOT EXISTS admin(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    first_name VARCHAR(30)
    )
""")

@router.message(Command("start"))
async def start_bot(message: Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–≠—Ç–æ –±–æ—Ç –º–∏—Ä—É–Ω–∏üßë‚Äçüíª\n–¢—É—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã —ç—Ç–æ–≥–æ –±–æ—Ç–∞üìÅ\n–ò–≥—Ä–∞—Ç—åü§† - /play\n–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞üíä - /start\n–ü–æ–º–æ—â—åüò≠ - /help\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èü§î - /info,\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—èüòÄ - registr,\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏üë® - users,\n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ - /help_admin", reply_markup=keyboard_start)

@router.message(F.text == "register")
async def start_bot(message: Message):
    cursor.execute(f"SELECT id FROM users WHERE id = {message.from_user.id}")
    users = cursor.fetchall()
    if users == []:
        cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?, ?, ?)",(message.from_user.id, message.from_user.first_name, message.from_user.last_name, 12, message.from_user.is_premium, 0))
        connection.commit()
        await message.reply("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üëå")
    else:
        await message.reply("–ê–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Çüòâ")
    await message.reply("–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!üòÑ")

@router.message(Command("add_admin"))
async def add_task(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏:")

    @router.message(F.text)
    async def save_admin(message: Message):
        if message.text == 'bugi':
            cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
            pop = cursor.fetchall()
            connection.commit()
            if pop == []:
                cursor.execute(
                    "INSERT INTO admin (user_id, first_name) VALUES (?, ?)",
                    (message.from_user.id, message.from_user.first_name)
                )
                connection.commit()
                await message.reply("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üëå")
            else:
                await message.reply("–ê–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Çüòâ")
            
        else:
            await message.reply("–ö–æ–¥ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–πüò°")
        await message.reply("–ò—Å–ø–æ–ª–Ω–µ–Ω–æ!ü´°")
        connection.commit()

@router.message(Command("help"))
async def help(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç –ø–æ–º–æ—á—å?\n–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞üìç - /start\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èü§î - /info \n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –æ–±—Ä–∞—â—è–π—Å—è –ø–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–µüòÑ - /help\n–ü—Ä–æ–ø–∏—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–ª–µ—à–∞ –Ω–∏–∂–µ\n–ü—Ä–æ—Ñ–∏–ª—åüß©, geeksüïµ, registerüíª", reply_markup=keyboard_start)

@router.message(Command("help_admin"))
async def help_admin(message: Message):
    cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
    admin = cursor.fetchall()
    if admin == []:
        await message.reply("–°–ø–µ—Ä–≤–∞ –∞–¥–º–∏–Ω–æ–º —Å—Ç–∞–Ω—å!ü§ì")
    elif admin != []:
        await message.reply("–í–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã!üòÑ", reply_markup=keyboard_help_admin)

@router.message(Command("info"))
async def info(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!‚úã\n–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–µ–º –±–æ—Ç–µ\n–ú–æ–π –±–æ—Ç –æ–±—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–∞–∫ —ç—Ö–æ —Ç–æ–µ—Å—Ç—å –æ–Ω –Ω–µ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞\n–ê –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∫ (pon)\n–ù–∞ —ç—Ç–æ–º —É –º–µ–Ω—è –≤—Å–µ!ü§ì\n–£–¥–∞—á–∏!\n/start \nVersion == 2.1.6üí´", reply_markup=keyboard_info)

@router.message(F.text == "geeks")
async def info(message: Message):
    await message.answer('–ù–∞—É—á–∏–ª—Å—è —è —ç—Ç–æ–º—É –≤ —É—á–µ–±–Ω–æ–º –º–µ—Å—Ç–µ GEEKS —ç—Ç–æ —Ö–æ—Ä–æ—à–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∞ —Ç–∞–∫–∂–µ –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä \n–ö–∞–∫ –¥–∏–∑–∞–π–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Ç.–¥\n/start', reply_markup=keyboard_start)

@router.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—å")
async def info_profile(message : Message):
    cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
    user_id = cursor.fetchall()
    connection.commit()
    cursor.execute(f"SELECT wins FROM users WHERE id = {message.from_user.id}")
    wins = cursor.fetchall()
    connection.commit()
    await message.reply(f"–ò–º—è - {message.from_user.first_name},\n–§–∞–º–∏–ª–∏—è - {message.from_user.last_name},\nid - {message.from_user.id},\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ - {wins},\n–ù–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∫–∏ - {user_id}")

# # @router.message(F.text == "users")
# async def users(message: Message):
#     cursor.execute(f"SELECT fist_name, id FROM users")
#     users = cursor.fetchall()
#     if message.from_user.id == admin_id:
#         await bot.send_message(admin_id ,f"—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n{users}")
#     else:
#         await message.reply("–ù–µ–¥–∞—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ üòÇ")

@router.message(F.text == "users")
async def users(message: Message):
    cursor.execute(f"SELECT fist_name, id FROM users")
    useri = cursor.fetchall()
    connection.commit()
    if useri:
        response = "—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
        for user_id, users in useri:
            users = useri
            response += f"{user_id}. {users}\n"
    await message.reply(f"{response}")

@router.message(Command("delete"))
async def delete(message: Message):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ–± —É–¥–∞–ª–∏—Ç—å –µ–≥–æ")

    @router.message(F.text)
    async def delete_accept(message: Message):
        cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
        admin = cursor.fetchall()
        try:
            if admin != []:
                cursor.execute(f"DELETE FROM users WHERE id = ?", (message.text))
                await message.reply("–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!üò¢")
            else:
                await message.reply("–ù–µ–¥–∞—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ üòÇ")
        except BaseException as e:
            await message.reply("Error")
            print(e)

@router.message(F.photo)
async def get_photo(message: Message):
    await message.answer(f"ID —Ñ–æ—Ç–∞: {message.photo[-1].file_id}")
    
@router.message(Command("play"))
async def play_bot(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç‚úã —è –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3 –æ—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æ!ü§î")
    keyboard = ReplyKeyboardBuilder()
    for i in range(1,4):
        keyboard.add(KeyboardButton(text=f'{i}'))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ: ", reply_markup=keyboard.as_markup(resize_keyboard=True))    

@router.message(F.text == '1')
async def odin(message: Message):
    if 1 == random.randint(1,3):
        cursor.execute(f"SELECT wins FROM users WHERE id = {message.from_user.id}")
        win = cursor.fetchall()
        if win:
            cursor.execute('UPDATE users SET wins = wins + ? WHERE id = ?', (1, message.from_user.id))
            connection.commit()
        await message.reply("–¢—ã –≤—ã–π–≥—Ä–∞–ª!üòÑ\n/start")
    else:
        await message.reply("–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!üò¢\n/start")
        
@router.message(F.text == '2')
async def dva(message: Message):
    if 2 == random.randint(1,3):
        cursor.execute(f"SELECT wins FROM users WHERE id = {message.from_user.id}")
        win = cursor.fetchall()
        if win:
            cursor.execute('UPDATE users SET wins = wins + ? WHERE id = ?', (1, message.from_user.id))
            connection.commit()
        await message.reply("–¢—ã –≤—ã–π–≥—Ä–∞–ª!üòÑ\n/start")
    else:
        await message.reply("–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!üò¢\n/start")

@router.message(F.text == '3')
async def tri(message: Message):
    if 3 == random.randint(1,3):
        cursor.execute(f"SELECT wins FROM users WHERE id = {message.from_user.id}")
        win = cursor.fetchall()
        if win:
            cursor.execute('UPDATE users SET wins = wins + ? WHERE id = ?', (1, message.from_user.id))
            connection.commit()
        await message.reply("–¢—ã –≤—ã–π–≥—Ä–∞–ª!üòÑ\n/start")
    else:
        await message.reply("–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!üò¢\n/start")

# @dp.message(Command('play'))
# async def numbers(message: Message):
#     keyboard = ReplyKeyboardBuilder()
#     for i in range(1,4):
#         keyboard.add(KeyboardButton(text=f'{i}'))
#     keyboard.adjust(2)
#     await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ: ", reply_markup=keyboard.as_markup(resize_keyboard=True))