# sqlite3

import sqlite3, random, time, asyncio

# aiogram

from aiogram import F, Router
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup, CallbackQuery, BotCommand
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from aiogram import types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ContentType
from aiogram.exceptions import TelegramBadRequest

from app.keyboard import *
from app.BD import *
from bot import *

router = Router()
fm_t = False
chat_id = None
admin = 5626265763

@router.message(Command("start"))
async def start_bot(message: Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–≠—Ç–æ –±–æ—Ç –º–∏—Ä—É–Ω–∏üßë‚Äçüíª\n–¢—É—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã —ç—Ç–æ–≥–æ –±–æ—Ç–∞üìÅ\n–ò–≥—Ä–∞—Ç—åü§† - /play\n–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞üíä - /start\n–ü–æ–º–æ—â—åüò≠ - /help\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èü§î - /info,\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—èüòÄ - registr,\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏üë® - users,\n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ - /help_admin", reply_markup=keyboard_start)
    await message.delete()

@router.message(Command("fake"))
async def fake(message: Message):
    players = [
        564646546, 'Bot', 4, 1000000
    ]
    cursor.execute("INSERT INTO users(user_id, name, wins, cash) VALUES(?, ?, ?, ?)", (players))
    connection.commit()

@router.message(F.text == "register")
async def start_bot(message: Message):
    cursor.execute(f"SELECT user_id FROM users WHERE user_id = {message.from_user.id}")
    users = cursor.fetchall()
    if users == []:
        cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?)",(message.from_user.id, message.from_user.first_name, 0, 500))
        connection.commit()
        await message.reply("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üëå")
        await message.reply(f"–í—ã –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –∏–º–µ–Ω–µ–º {message.from_user.id}")
    else:
        await message.reply("–ê–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Çüòâ")
    await message.reply("–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!üòÑ")

@router.message(Command("help"))
async def help(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç –ø–æ–º–æ—á—å?\n–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞üìç - /start\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èü§î - /info \n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –æ–±—Ä–∞—â—è–π—Å—è –ø–æ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–µüòÑ - /help\n–ü—Ä–æ–ø–∏—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ\n–ü—Ä–æ—Ñ–∏–ª—åüß©, geeksüïµ, registerüíª, –∫–æ–ø–∞—Ç—åüí∞, /transferüì≤, –§–µ—Ä–º–∞üî´", reply_markup=keyboard_start)

@router.message(Command("help_admin"))
async def help_admin(message: Message):
    cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
    admin = cursor.fetchall()
    if admin == []:
        await message.reply("–°–ø–µ—Ä–≤–∞ –∞–¥–º–∏–Ω–æ–º —Å—Ç–∞–Ω—å!ü§ì")
        await message.delete()  
    elif admin != []:
        await message.reply("–í–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã!üòÑ", reply_markup=help_admin_keyboard)
        await message.delete()  

@router.message(Command("info"))
async def info(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!‚úã\n–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–µ–º –±–æ—Ç–µ\n–ú–æ–π –±–æ—Ç –æ–±—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–∞–∫ —ç—Ö–æ —Ç–æ–µ—Å—Ç—å –æ–Ω –Ω–µ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞\n–ê –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∫ (pon)\n–ù–∞ —ç—Ç–æ–º —É –º–µ–Ω—è –≤—Å–µ!ü§ì\n–£–¥–∞—á–∏!\n/start \nVersion == 2.1.9üí´", reply_markup=keyboard_info)
    await message.delete()  

@router.message(F.text == "geeks")
async def info(message: Message):
    await message.answer('–ù–∞—É—á–∏–ª—Å—è —è —ç—Ç–æ–º—É –≤ —É—á–µ–±–Ω–æ–º –º–µ—Å—Ç–µ GEEKS —ç—Ç–æ —Ö–æ—Ä–æ—à–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∞ —Ç–∞–∫–∂–µ –¥—Ä—É–≥–∏—Ö —Å—Ñ–µ—Ä \n–ö–∞–∫ –¥–∏–∑–∞–π–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Ç.–¥\n/start', reply_markup=keyboard_start)
    await message.delete()  

@router.message(F.text == "–ø—Ä–æ—Ñ–∏–ª—å")
async def info_profile(message : Message):
    cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
    user_id = cursor.fetchall()
    cursor.execute(f"SELECT wins FROM users WHERE user_id = {message.from_user.id}")
    wins = cursor.fetchall()
    cursor.execute(f"SELECT cash FROM users WHERE user_id = {message.from_user.id}")
    money = cursor.fetchall()
    connection.commit()
    await message.reply(f"–ò–º—è - {message.from_user.first_name},\nid - {message.from_user.id},\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ - {wins},\n–î–µ–Ω—å–≥–∏üíµ - {money},\n–ù–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∫–∏ - {user_id}")
    await message.delete()  

@router.message(F.text == "users")
async def users(message: Message):
    cursor.execute(f"SELECT name, id FROM users")
    useri = cursor.fetchall()
    connection.commit()
    if useri:
        response = "—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
        for user_id, users in useri:
            users = useri
            response += f"{user_id}. {users}\n"
    await message.reply(f"{response}")

@router.callback_query(F.data == 'delete')
async def delete_help(callback: CallbackQuery):
    await callback.answer("delete")
    await callback.message.edit_text("–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ —ç—Ç–æ -> /delete")

@router.message(Command("delete"))
async def delete(message: Message, state: FSMContext):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ–± —É–¥–∞–ª–∏—Ç—å –µ–≥–æ")
    await message.delete()  

    @router.message(F.text)
    async def delete_accept(message: Message):
            cursor.execute(f"SELECT user_id FROM admin WHERE user_id = {message.from_user.id}")
            admin = cursor.fetchall()
            connection.commit()
            try:
                if admin != []:
                    cursor.execute("DELETE FROM users WHERE user_id = ?", (message.text,))
                    connection.commit()
                    await message.reply("–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!üò¢")
                    await message.reply("/start")
                else:
                    await message.reply("–ù–µ–¥–∞—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ üòÇ")
                    await message.reply("/start")
            except BaseException as e:
                await message.reply("Error")
                print(e)
                await message.reply("/start")

@router.message(F.photo)
async def get_photo(message: Message):
    await message.answer(f"ID —Ñ–æ—Ç–∞: {message.photo[-1].file_id}")

@router.message(F.text == '–∫–æ–ø–∞—Ç—å')
async def kopat(message: Message):
        await message.reply(f"–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: 500üíµ")
        cursor.execute("UPDATE users SET cash = cash + ? WHERE user_id = ?", (500, message.from_user.id))
        connection.commit()

@router.message(Command('transfer'))
async def transfer_pol(message: Message):

    try:
        args = message.text.split()
        if len(args) < 3:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /transfer <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> <—Å—É–º–º–∞> –ü—Ä–∏–º–µ—Ä /transfer id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 100")

        receiver_id = int(args[1])
        amount = float(args[2])

        cursor.execute("SELECT cash FROM users WHERE user_id = ?", (message.from_user.id,))
        sender_cash = cursor.fetchone()

        if sender_cash is None:
            raise ValueError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        if sender_cash[0] < amount:
            raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞")

        cursor.execute("UPDATE users SET cash = cash - ? WHERE user_id = ?", (amount, message.from_user.id))
        cursor.execute("UPDATE users SET cash = cash + ? WHERE user_id = ?", (amount, receiver_id))

        connection.commit()
        await message.reply("–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        connection.rollback()
        await message.reply(f"–û—à–∏–±–∫–∞: {e}")

##–§–µ—Ä–º—É —Å –ª—é–¥—å–º–∏ –ø–æ–º–µ–Ω—è—Ç—å

@router.message(F.text.in_({"–§–µ—Ä–º–∞", "athvf", "—Ñ–µ—Ä–º–∞"}))
async def farm(message: Message):
    cursor.execute(f"SELECT user_id FROM farm WHERE user_id = {message.from_user.id}")
    us = cursor.fetchall()
    connection.commit()
    if us == []:
        await message.reply("–§–µ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∞‚öîÔ∏è")
        await create_farm(message.from_user.id)
    else:
        cursor.execute(f"SELECT size FROM farm WHERE user_id = {message.from_user.id}")
        size = cursor.fetchone()
        cursor.execute(F"SELECT lvl FROM farm WHERE user_id = {message.from_user.id}")
        lvl = cursor.fetchone()
        connection.commit()
        await message.reply(f"--–§–µ—Ä–º–∞--\n–õ—é–¥–∏ - {size}\nlvl - {lvl}", reply_markup=arm_kb)

@router.callback_query(F.data == 'add')
async def add(callback: CallbackQuery):
    await callback.answer("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
    acc = await accept(callback.from_user.id)
    if acc == True:
        await callback.message.answer("100 –õ—é–¥–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ñ–µ—Ä–º—Éüü©")
        await add_people_farm(callback.from_user.id)
    else:
        await callback.message.answer("–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥üìâ")

async def add_people_farm(idi):
        cursor.execute("UPDATE farm SET size = size + ? WHERE user_id = ?", (50, idi))
        cursor.execute("UPDATE users SET cash = cash - ? WHERE user_id = ?", (500, idi))
        connection.commit()

async def accept(idi):
    cursor.execute(F"SELECT cash FROM users WHERE user_id = {idi}")
    cash = cursor.fetchone()
    result = cash[0]
    connection.commit()
    if result > 0:
        acc = True
    else:
        acc = False
    return acc

@router.message(Command("play"))
async def play_bot(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç‚úã —è –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3 –æ—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æ!ü§î")
    keyboard = ReplyKeyboardBuilder()
    for i in range(1,4):
        keyboard.add(KeyboardButton(text=f'{i}'))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ: ", reply_markup=keyboard.as_markup(resize_keyboard=True))
    await message.delete()    

    @router.message(F.text.in_(['1', '2', '3']))
    async def odin(message: Message):
        user_guess = int(message.text)
        correct_number = random.randint(1, 3)
        if user_guess == correct_number:
                cursor.execute('UPDATE users SET wins = wins + ? WHERE user_id = ?', (1, message.from_user.id))
                connection.commit()
                await message.answer_photo(photo="https://pic.vjshi.com/2023-04-20/e57c2237d4bf4f64928b0d20a8c33d53/online/puzzle.jpg?x-oss-process=style/w1440_h2880")
                await message.answer("–¢—ã –≤—ã–π–≥—Ä–∞–ª!üòÑ\n/start")
        else:
            await message.answer_photo(photo="https://i.pinimg.com/600x315/60/a7/1f/60a71f48617c70eca2f990f374d1e848.jpg")
            await message.answer("–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!üò¢\n/start")